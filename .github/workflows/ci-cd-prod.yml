name: ci-cd-prod

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    paths-ignore:
      - 'README.md'
      - 'Makefile'
      - '.infra/**'
      - 'docs/**'
    branches: [ "main" ]
  workflow_dispatch:


jobs:
  ci-cd-prod-build-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Version
        id: version
        run: echo "RUN_NUMBER=${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV

      - name: Build and Tag Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/hw-api:${{ env.RUN_NUMBER }} .
          docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/hw-api:${{ env.RUN_NUMBER }} ${{ secrets.DOCKER_HUB_USERNAME }}/hw-api:latest
      
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/hw-api:${{ env.RUN_NUMBER }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/hw-api:latest
      
      - name: Install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq
      
      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      
      - name: Update Helm chart version
        run: |
          CHART_PATH=./.kubernetes/charts/hw-api/Chart.yaml
          NEW_VERSION=$(printf "%d" ${{ env.RUN_NUMBER }})
          echo "Setting chart version to $NEW_VERSION"
          yq e ".version = \"$NEW_VERSION\"" -i $CHART_PATH
      
      - name: Install dependencies and Package Helm chart
        run: |
          helm dependency update ./.kubernetes/charts/hw-api
          helm package ./.kubernetes/charts/hw-api
      
      - name: Publish to ECR
        run: |
          aws ecr get-login-password --region eu-central-1 | helm registry login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URI }}
          chart_name=$(ls *.tgz)
          helm push "$chart_name" oci://${{ secrets.ECR_REPOSITORY_URI }}
